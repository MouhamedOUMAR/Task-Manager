{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { Validators, ReactiveFormsModule } from '@angular/forms';\nimport { RouterLink } from '@angular/router';\nimport { TaskStatus } from '../../models/task.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/task.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nconst _c0 = a0 => [\"/tasks\", a0];\nfunction TaskEditComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"div\", 13)(2, \"div\", 14)(3, \"span\", 15);\n    i0.ɵɵtext(4, \"Loading...\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"p\", 16);\n    i0.ɵɵtext(6, \"Loading task...\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction TaskEditComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17)(1, \"div\", 18)(2, \"div\", 19)(3, \"div\", 20);\n    i0.ɵɵelement(4, \"i\", 21);\n    i0.ɵɵelementStart(5, \"div\")(6, \"h5\", 22);\n    i0.ɵɵtext(7, \"Oops! Something went wrong\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"p\", 23);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(9);\n    i0.ɵɵtextInterpolate(ctx_r0.error);\n  }\n}\nfunction TaskEditComponent_div_16_div_9_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"i\", 49);\n    i0.ɵɵtext(2, \"Task title is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskEditComponent_div_16_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 47);\n    i0.ɵɵtemplate(1, TaskEditComponent_div_16_div_9_div_1_Template, 3, 0, \"div\", 48);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    let tmp_2_0;\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx_r0.taskForm.get(\"title\")) == null ? null : tmp_2_0.errors == null ? null : tmp_2_0.errors[\"required\"]);\n  }\n}\nfunction TaskEditComponent_div_16_div_26_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"i\", 49);\n    i0.ɵɵtext(2, \"Please select a status. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskEditComponent_div_16_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 47);\n    i0.ɵɵtemplate(1, TaskEditComponent_div_16_div_26_div_1_Template, 3, 0, \"div\", 48);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    let tmp_2_0;\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx_r0.taskForm.get(\"status\")) == null ? null : tmp_2_0.errors == null ? null : tmp_2_0.errors[\"required\"]);\n  }\n}\nfunction TaskEditComponent_div_16_span_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 50);\n  }\n}\nfunction TaskEditComponent_div_16_i_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 51);\n  }\n}\nfunction TaskEditComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 17)(1, \"div\", 24)(2, \"div\", 25)(3, \"form\", 26);\n    i0.ɵɵlistener(\"ngSubmit\", function TaskEditComponent_div_16_Template_form_ngSubmit_3_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.onSubmit());\n    });\n    i0.ɵɵelementStart(4, \"div\", 27)(5, \"label\", 28);\n    i0.ɵɵelement(6, \"i\", 29);\n    i0.ɵɵtext(7, \"Task Title * \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"input\", 30);\n    i0.ɵɵtemplate(9, TaskEditComponent_div_16_div_9_Template, 2, 1, \"div\", 31);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 27)(11, \"label\", 32);\n    i0.ɵɵelement(12, \"i\", 33);\n    i0.ɵɵtext(13, \"Description \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(14, \"textarea\", 34);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"div\", 27)(16, \"label\", 35);\n    i0.ɵɵelement(17, \"i\", 36);\n    i0.ɵɵtext(18, \"Status * \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"select\", 37)(20, \"option\", 38);\n    i0.ɵɵtext(21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"option\", 38);\n    i0.ɵɵtext(23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"option\", 38);\n    i0.ɵɵtext(25);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(26, TaskEditComponent_div_16_div_26_Template, 2, 1, \"div\", 31);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"div\", 27)(28, \"label\", 39);\n    i0.ɵɵelement(29, \"i\", 40);\n    i0.ɵɵtext(30, \"Due Date \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(31, \"input\", 41);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(32, \"div\", 4)(33, \"a\", 42);\n    i0.ɵɵelement(34, \"i\", 43);\n    i0.ɵɵtext(35, \"Cancel \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(36, \"button\", 44);\n    i0.ɵɵtemplate(37, TaskEditComponent_div_16_span_37_Template, 1, 0, \"span\", 45)(38, TaskEditComponent_div_16_i_38_Template, 1, 0, \"i\", 46);\n    i0.ɵɵtext(39);\n    i0.ɵɵelementEnd()()()()()();\n  }\n  if (rf & 2) {\n    let tmp_2_0;\n    let tmp_3_0;\n    let tmp_4_0;\n    let tmp_11_0;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.taskForm);\n    i0.ɵɵadvance(5);\n    i0.ɵɵclassProp(\"is-invalid\", ((tmp_2_0 = ctx_r0.taskForm.get(\"title\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx_r0.taskForm.get(\"title\")) == null ? null : tmp_2_0.touched));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx_r0.taskForm.get(\"title\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx_r0.taskForm.get(\"title\")) == null ? null : tmp_3_0.touched));\n    i0.ɵɵadvance(10);\n    i0.ɵɵclassProp(\"is-invalid\", ((tmp_4_0 = ctx_r0.taskForm.get(\"status\")) == null ? null : tmp_4_0.invalid) && ((tmp_4_0 = ctx_r0.taskForm.get(\"status\")) == null ? null : tmp_4_0.touched));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"value\", ctx_r0.TaskStatus.TODO);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0.TaskStatus.TODO);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"value\", ctx_r0.TaskStatus.IN_PROGRESS);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0.TaskStatus.IN_PROGRESS);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"value\", ctx_r0.TaskStatus.DONE);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0.TaskStatus.DONE);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ((tmp_11_0 = ctx_r0.taskForm.get(\"status\")) == null ? null : tmp_11_0.invalid) && ((tmp_11_0 = ctx_r0.taskForm.get(\"status\")) == null ? null : tmp_11_0.touched));\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(18, _c0, ctx_r0.taskId));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.taskForm.invalid || ctx_r0.saving);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.saving);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.saving);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.saving ? \"Saving...\" : \"Save Changes\", \" \");\n  }\n}\nexport class TaskEditComponent {\n  constructor(fb, taskService, route, router) {\n    this.fb = fb;\n    this.taskService = taskService;\n    this.route = route;\n    this.router = router;\n    this.taskForm = null;\n    this.loading = false;\n    this.saving = false;\n    this.error = '';\n    this.taskId = null;\n    this.TaskStatus = TaskStatus;\n  }\n  ngOnInit() {\n    const id = this.route.snapshot.paramMap.get('id');\n    if (id) {\n      this.taskId = +id;\n      this.loadTask();\n    } else {\n      this.error = 'Task ID not found.';\n    }\n  }\n  loadTask() {\n    if (!this.taskId) return;\n    this.loading = true;\n    this.error = '';\n    this.taskService.getTaskById(this.taskId).subscribe({\n      next: task => {\n        this.initializeForm(task);\n        this.loading = false;\n      },\n      error: error => {\n        this.error = 'Failed to load task. Please try again.';\n        this.loading = false;\n        console.error('Error loading task:', error);\n      }\n    });\n  }\n  initializeForm(task) {\n    this.taskForm = this.fb.group({\n      title: [task.title, [Validators.required]],\n      description: [task.description || ''],\n      status: [task.status, [Validators.required]],\n      dueDate: [task.dueDate ? this.formatDateForInput(task.dueDate) : '']\n    });\n  }\n  formatDateForInput(date) {\n    const d = new Date(date);\n    if (isNaN(d.getTime())) {\n      return '';\n    }\n    const year = d.getFullYear();\n    const month = String(d.getMonth() + 1).padStart(2, '0');\n    const day = String(d.getDate()).padStart(2, '0');\n    const hours = String(d.getHours()).padStart(2, '0');\n    const minutes = String(d.getMinutes()).padStart(2, '0');\n    return `${year}-${month}-${day}T${hours}:${minutes}`;\n  }\n  onSubmit() {\n    if (this.taskForm && this.taskForm.valid && this.taskId) {\n      this.saving = true;\n      this.error = '';\n      const taskData = {\n        ...this.taskForm.value,\n        dueDate: this.taskForm.value.dueDate ? new Date(this.taskForm.value.dueDate) : undefined\n      };\n      this.taskService.updateTask(this.taskId, taskData).subscribe({\n        next: () => {\n          this.router.navigate(['/tasks', this.taskId]);\n        },\n        error: error => {\n          this.error = 'Failed to update task. Please try again.';\n          this.saving = false;\n          console.error('Error updating task:', error);\n        }\n      });\n    } else if (this.taskForm) {\n      this.markFormGroupTouched();\n    }\n  }\n  markFormGroupTouched() {\n    if (this.taskForm) {\n      Object.keys(this.taskForm.controls).forEach(key => {\n        const control = this.taskForm.get(key);\n        control?.markAsTouched();\n      });\n    }\n  }\n  static {\n    this.ɵfac = function TaskEditComponent_Factory(t) {\n      return new (t || TaskEditComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.TaskService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TaskEditComponent,\n      selectors: [[\"app-task-edit\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 17,\n      vars: 3,\n      consts: [[1, \"container-fluid\"], [1, \"row\", \"mb-4\"], [1, \"col-12\"], [1, \"glass-card\", \"p-4\"], [1, \"d-flex\", \"justify-content-between\", \"align-items-center\"], [1, \"text-white\", \"mb-2\"], [1, \"fas\", \"fa-edit\", \"me-3\"], [1, \"text-white-50\", \"mb-0\"], [\"routerLink\", \"/tasks\", 1, \"btn\", \"btn-outline-primary\"], [1, \"fas\", \"fa-arrow-left\", \"me-2\"], [\"class\", \"loading-spinner\", 4, \"ngIf\"], [\"class\", \"row justify-content-center\", 4, \"ngIf\"], [1, \"loading-spinner\"], [1, \"text-center\"], [\"role\", \"status\", 1, \"spinner-border\"], [1, \"visually-hidden\"], [1, \"text-white\", \"mt-3\"], [1, \"row\", \"justify-content-center\"], [1, \"col-md-8\"], [\"role\", \"alert\", 1, \"alert\", \"alert-danger\"], [1, \"d-flex\", \"align-items-center\"], [1, \"fas\", \"fa-exclamation-triangle\", \"me-3\", \"fs-4\"], [1, \"alert-heading\"], [1, \"mb-0\"], [1, \"col-lg-8\", \"col-xl-6\"], [1, \"task-form\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"mb-4\"], [\"for\", \"title\", 1, \"form-label\"], [1, \"fas\", \"fa-heading\", \"me-2\"], [\"type\", \"text\", \"id\", \"title\", \"formControlName\", \"title\", \"placeholder\", \"Enter a descriptive title\", 1, \"form-control\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"for\", \"description\", 1, \"form-label\"], [1, \"fas\", \"fa-align-left\", \"me-2\"], [\"id\", \"description\", \"formControlName\", \"description\", \"rows\", \"4\", \"placeholder\", \"Provide additional details (optional)\", 1, \"form-control\"], [\"for\", \"status\", 1, \"form-label\"], [1, \"fas\", \"fa-flag\", \"me-2\"], [\"id\", \"status\", \"formControlName\", \"status\", 1, \"form-select\"], [3, \"value\"], [\"for\", \"dueDate\", 1, \"form-label\"], [1, \"fas\", \"fa-calendar\", \"me-2\"], [\"type\", \"datetime-local\", \"id\", \"dueDate\", \"formControlName\", \"dueDate\", 1, \"form-control\"], [1, \"btn\", \"btn-outline-secondary\", \"btn-lg\", 3, \"routerLink\"], [1, \"fas\", \"fa-times\", \"me-2\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-lg\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm me-2\", \"role\", \"status\", 4, \"ngIf\"], [\"class\", \"fas fa-save me-2\", 4, \"ngIf\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [1, \"fas\", \"fa-exclamation-circle\", \"me-1\"], [\"role\", \"status\", 1, \"spinner-border\", \"spinner-border-sm\", \"me-2\"], [1, \"fas\", \"fa-save\", \"me-2\"]],\n      template: function TaskEditComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\")(6, \"h2\", 5);\n          i0.ɵɵelement(7, \"i\", 6);\n          i0.ɵɵtext(8, \"Edit Task \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"p\", 7);\n          i0.ɵɵtext(10, \"Refine the details of your task\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(11, \"a\", 8);\n          i0.ɵɵelement(12, \"i\", 9);\n          i0.ɵɵtext(13, \"Back to Tasks \");\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵtemplate(14, TaskEditComponent_div_14_Template, 7, 0, \"div\", 10)(15, TaskEditComponent_div_15_Template, 10, 1, \"div\", 11)(16, TaskEditComponent_div_16_Template, 40, 20, \"div\", 11);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(14);\n          i0.ɵɵproperty(\"ngIf\", ctx.loading);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.error);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.loading && ctx.taskForm);\n        }\n      },\n      dependencies: [CommonModule, i4.NgIf, ReactiveFormsModule, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, RouterLink],\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["CommonModule","Validators","ReactiveFormsModule","RouterLink","TaskStatus","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","error","ɵɵtemplate","TaskEditComponent_div_16_div_9_div_1_Template","ɵɵproperty","tmp_2_0","taskForm","get","errors","TaskEditComponent_div_16_div_26_div_1_Template","ɵɵlistener","TaskEditComponent_div_16_Template_form_ngSubmit_3_listener","ɵɵrestoreView","_r2","ɵɵnextContext","ɵɵresetView","onSubmit","TaskEditComponent_div_16_div_9_Template","TaskEditComponent_div_16_div_26_Template","TaskEditComponent_div_16_span_37_Template","TaskEditComponent_div_16_i_38_Template","ɵɵclassProp","invalid","touched","tmp_3_0","tmp_4_0","TODO","IN_PROGRESS","DONE","tmp_11_0","ɵɵpureFunction1","_c0","taskId","saving","ɵɵtextInterpolate1","TaskEditComponent","constructor","fb","taskService","route","router","loading","ngOnInit","id","snapshot","paramMap","loadTask","getTaskById","subscribe","next","task","initializeForm","console","group","title","required","description","status","dueDate","formatDateForInput","date","d","Date","isNaN","getTime","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","valid","taskData","value","undefined","updateTask","navigate","markFormGroupTouched","Object","keys","controls","forEach","key","control","markAsTouched","ɵɵdirectiveInject","i1","FormBuilder","i2","TaskService","i3","ActivatedRoute","Router","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","TaskEditComponent_Template","rf","ctx","TaskEditComponent_div_14_Template","TaskEditComponent_div_15_Template","TaskEditComponent_div_16_Template","i4","NgIf","ɵNgNoValidate","NgSelectOption","ɵNgSelectMultipleOption","DefaultValueAccessor","SelectControlValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","encapsulation"],"sources":["C:\\Users\\HP\\Desktop\\taskmanager\\frontend\\src\\app\\components\\task-edit\\task-edit.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\r\nimport { ActivatedRoute, Router, RouterLink } from '@angular/router';\r\nimport { TaskService } from '../../services/task.service';\r\nimport { Task, TaskStatus } from '../../models/task.model';\r\n\r\n@Component({\r\n  selector: 'app-task-edit',\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule, RouterLink],\r\n  template: `\r\n    <div class=\"container-fluid\">\r\n      <!-- Header Section -->\r\n      <div class=\"row mb-4\">\r\n        <div class=\"col-12\">\r\n          <div class=\"glass-card p-4\">\r\n            <div class=\"d-flex justify-content-between align-items-center\">\r\n              <div>\r\n                <h2 class=\"text-white mb-2\">\r\n                  <i class=\"fas fa-edit me-3\"></i>Edit Task\r\n                </h2>\r\n                <p class=\"text-white-50 mb-0\">Refine the details of your task</p>\r\n              </div>\r\n              <a routerLink=\"/tasks\" class=\"btn btn-outline-primary\">\r\n                <i class=\"fas fa-arrow-left me-2\"></i>Back to Tasks\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Loading State -->\r\n      <div *ngIf=\"loading\" class=\"loading-spinner\">\r\n        <div class=\"text-center\">\r\n          <div class=\"spinner-border\" role=\"status\">\r\n            <span class=\"visually-hidden\">Loading...</span>\r\n          </div>\r\n          <p class=\"text-white mt-3\">Loading task...</p>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Error State -->\r\n      <div *ngIf=\"error\" class=\"row justify-content-center\">\r\n        <div class=\"col-md-8\">\r\n          <div class=\"alert alert-danger\" role=\"alert\">\r\n             <div class=\"d-flex align-items-center\">\r\n              <i class=\"fas fa-exclamation-triangle me-3 fs-4\"></i>\r\n              <div>\r\n                <h5 class=\"alert-heading\">Oops! Something went wrong</h5>\r\n                <p class=\"mb-0\">{{ error }}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Form Section -->\r\n      <div *ngIf=\"!loading && taskForm\" class=\"row justify-content-center\">\r\n        <div class=\"col-lg-8 col-xl-6\">\r\n          <div class=\"task-form\">\r\n            <form [formGroup]=\"taskForm\" (ngSubmit)=\"onSubmit()\">\r\n              <!-- Title Field -->\r\n              <div class=\"mb-4\">\r\n                <label for=\"title\" class=\"form-label\">\r\n                  <i class=\"fas fa-heading me-2\"></i>Task Title *\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  id=\"title\"\r\n                  formControlName=\"title\"\r\n                  [class.is-invalid]=\"taskForm.get('title')?.invalid && taskForm.get('title')?.touched\"\r\n                  placeholder=\"Enter a descriptive title\"\r\n                >\r\n                <div *ngIf=\"taskForm.get('title')?.invalid && taskForm.get('title')?.touched\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"taskForm.get('title')?.errors?.['required']\">\r\n                    <i class=\"fas fa-exclamation-circle me-1\"></i>Task title is required.\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- Description Field -->\r\n              <div class=\"mb-4\">\r\n                <label for=\"description\" class=\"form-label\">\r\n                  <i class=\"fas fa-align-left me-2\"></i>Description\r\n                </label>\r\n                <textarea\r\n                  class=\"form-control\"\r\n                  id=\"description\"\r\n                  formControlName=\"description\"\r\n                  rows=\"4\"\r\n                  placeholder=\"Provide additional details (optional)\"\r\n                ></textarea>\r\n              </div>\r\n\r\n              <!-- Status Field -->\r\n              <div class=\"mb-4\">\r\n                <label for=\"status\" class=\"form-label\">\r\n                  <i class=\"fas fa-flag me-2\"></i>Status *\r\n                </label>\r\n                <select\r\n                  class=\"form-select\"\r\n                  id=\"status\"\r\n                  formControlName=\"status\"\r\n                  [class.is-invalid]=\"taskForm.get('status')?.invalid && taskForm.get('status')?.touched\"\r\n                >\r\n                  <option [value]=\"TaskStatus.TODO\">{{ TaskStatus.TODO }}</option>\r\n                  <option [value]=\"TaskStatus.IN_PROGRESS\">{{ TaskStatus.IN_PROGRESS }}</option>\r\n                  <option [value]=\"TaskStatus.DONE\">{{ TaskStatus.DONE }}</option>\r\n                </select>\r\n                <div *ngIf=\"taskForm.get('status')?.invalid && taskForm.get('status')?.touched\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"taskForm.get('status')?.errors?.['required']\">\r\n                    <i class=\"fas fa-exclamation-circle me-1\"></i>Please select a status.\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- Due Date Field -->\r\n              <div class=\"mb-4\">\r\n                <label for=\"dueDate\" class=\"form-label\">\r\n                  <i class=\"fas fa-calendar me-2\"></i>Due Date\r\n                </label>\r\n                <input\r\n                  type=\"datetime-local\"\r\n                  class=\"form-control\"\r\n                  id=\"dueDate\"\r\n                  formControlName=\"dueDate\"\r\n                >\r\n              </div>\r\n\r\n              <!-- Form Actions -->\r\n              <div class=\"d-flex justify-content-between align-items-center\">\r\n                <a [routerLink]=\"['/tasks', taskId]\" class=\"btn btn-outline-secondary btn-lg\">\r\n                  <i class=\"fas fa-times me-2\"></i>Cancel\r\n                </a>\r\n                <button\r\n                  type=\"submit\"\r\n                  class=\"btn btn-primary btn-lg\"\r\n                  [disabled]=\"taskForm.invalid || saving\"\r\n                >\r\n                  <span *ngIf=\"saving\" class=\"spinner-border spinner-border-sm me-2\" role=\"status\"></span>\r\n                  <i *ngIf=\"!saving\" class=\"fas fa-save me-2\"></i>\r\n                  {{ saving ? 'Saving...' : 'Save Changes' }}\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: []\r\n})\r\nexport class TaskEditComponent implements OnInit {\r\n  taskForm: FormGroup | null = null;\r\n  loading = false;\r\n  saving = false;\r\n  error = '';\r\n  taskId: number | null = null;\r\n  TaskStatus = TaskStatus;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private taskService: TaskService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    const id = this.route.snapshot.paramMap.get('id');\r\n    if (id) {\r\n      this.taskId = +id;\r\n      this.loadTask();\r\n    } else {\r\n      this.error = 'Task ID not found.';\r\n    }\r\n  }\r\n\r\n  loadTask(): void {\r\n    if (!this.taskId) return;\r\n    this.loading = true;\r\n    this.error = '';\r\n    \r\n    this.taskService.getTaskById(this.taskId).subscribe({\r\n      next: (task) => {\r\n        this.initializeForm(task);\r\n        this.loading = false;\r\n      },\r\n      error: (error) => {\r\n        this.error = 'Failed to load task. Please try again.';\r\n        this.loading = false;\r\n        console.error('Error loading task:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  private initializeForm(task: Task): void {\r\n    this.taskForm = this.fb.group({\r\n      title: [task.title, [Validators.required]],\r\n      description: [task.description || ''],\r\n      status: [task.status, [Validators.required]],\r\n      dueDate: [task.dueDate ? this.formatDateForInput(task.dueDate) : '']\r\n    });\r\n  }\r\n\r\n  private formatDateForInput(date: Date | string): string {\r\n    const d = new Date(date);\r\n    if (isNaN(d.getTime())) {\r\n      return '';\r\n    }\r\n    const year = d.getFullYear();\r\n    const month = String(d.getMonth() + 1).padStart(2, '0');\r\n    const day = String(d.getDate()).padStart(2, '0');\r\n    const hours = String(d.getHours()).padStart(2, '0');\r\n    const minutes = String(d.getMinutes()).padStart(2, '0');\r\n    return `${year}-${month}-${day}T${hours}:${minutes}`;\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.taskForm && this.taskForm.valid && this.taskId) {\r\n      this.saving = true;\r\n      this.error = '';\r\n\r\n      const taskData: Task = {\r\n        ...this.taskForm.value,\r\n        dueDate: this.taskForm.value.dueDate ? new Date(this.taskForm.value.dueDate) : undefined\r\n      };\r\n\r\n      this.taskService.updateTask(this.taskId, taskData).subscribe({\r\n        next: () => {\r\n          this.router.navigate(['/tasks', this.taskId]);\r\n        },\r\n        error: (error) => {\r\n          this.error = 'Failed to update task. Please try again.';\r\n          this.saving = false;\r\n          console.error('Error updating task:', error);\r\n        }\r\n      });\r\n    } else if (this.taskForm) {\r\n      this.markFormGroupTouched();\r\n    }\r\n  }\r\n\r\n  private markFormGroupTouched(): void {\r\n    if (this.taskForm) {\r\n      Object.keys(this.taskForm.controls).forEach(key => {\r\n        const control = this.taskForm!.get(key);\r\n        control?.markAsTouched();\r\n      });\r\n    }\r\n  }\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}