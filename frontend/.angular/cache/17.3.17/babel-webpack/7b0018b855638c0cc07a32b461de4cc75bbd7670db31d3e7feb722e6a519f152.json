{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { Validators, ReactiveFormsModule } from '@angular/forms';\nimport { RouterLink } from '@angular/router';\nimport { TaskStatus } from '../../models/task.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/task.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction TaskEditComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"div\", 11)(2, \"span\", 12);\n    i0.ɵɵtext(3, \"Loading...\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction TaskEditComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵelement(1, \"i\", 14);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.error, \" \");\n  }\n}\nfunction TaskEditComponent_form_12_div_5_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Title is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskEditComponent_form_12_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtemplate(1, TaskEditComponent_form_12_div_5_div_1_Template, 2, 0, \"div\", 34);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    let tmp_2_0;\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx_r0.taskForm.get(\"title\")) == null ? null : tmp_2_0.errors == null ? null : tmp_2_0.errors[\"required\"]);\n  }\n}\nfunction TaskEditComponent_form_12_div_22_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Status is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskEditComponent_form_12_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtemplate(1, TaskEditComponent_form_12_div_22_div_1_Template, 2, 0, \"div\", 34);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    let tmp_2_0;\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx_r0.taskForm.get(\"status\")) == null ? null : tmp_2_0.errors == null ? null : tmp_2_0.errors[\"required\"]);\n  }\n}\nfunction TaskEditComponent_form_12_span_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 35);\n  }\n}\nfunction TaskEditComponent_form_12_i_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 36);\n  }\n}\nfunction TaskEditComponent_form_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 15);\n    i0.ɵɵlistener(\"ngSubmit\", function TaskEditComponent_form_12_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.onSubmit());\n    });\n    i0.ɵɵelementStart(1, \"div\", 16)(2, \"label\", 17);\n    i0.ɵɵtext(3, \"Title *\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 18);\n    i0.ɵɵtemplate(5, TaskEditComponent_form_12_div_5_Template, 2, 1, \"div\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 16)(7, \"label\", 20);\n    i0.ɵɵtext(8, \"Description\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"textarea\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 16)(11, \"label\", 22);\n    i0.ɵɵtext(12, \"Status *\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"select\", 23)(14, \"option\", 24);\n    i0.ɵɵtext(15, \"Select status\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"option\", 25);\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"option\", 25);\n    i0.ɵɵtext(19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"option\", 25);\n    i0.ɵɵtext(21);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(22, TaskEditComponent_form_12_div_22_Template, 2, 1, \"div\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"div\", 16)(24, \"label\", 26);\n    i0.ɵɵtext(25, \"Due Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(26, \"input\", 27);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"div\", 28)(28, \"a\", 29);\n    i0.ɵɵtext(29, \"Cancel\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(30, \"button\", 30);\n    i0.ɵɵtemplate(31, TaskEditComponent_form_12_span_31_Template, 1, 0, \"span\", 31)(32, TaskEditComponent_form_12_i_32_Template, 1, 0, \"i\", 32);\n    i0.ɵɵtext(33);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    let tmp_2_0;\n    let tmp_3_0;\n    let tmp_4_0;\n    let tmp_11_0;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.taskForm);\n    i0.ɵɵadvance(4);\n    i0.ɵɵclassProp(\"is-invalid\", ((tmp_2_0 = ctx_r0.taskForm.get(\"title\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx_r0.taskForm.get(\"title\")) == null ? null : tmp_2_0.touched));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx_r0.taskForm.get(\"title\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx_r0.taskForm.get(\"title\")) == null ? null : tmp_3_0.touched));\n    i0.ɵɵadvance(8);\n    i0.ɵɵclassProp(\"is-invalid\", ((tmp_4_0 = ctx_r0.taskForm.get(\"status\")) == null ? null : tmp_4_0.invalid) && ((tmp_4_0 = ctx_r0.taskForm.get(\"status\")) == null ? null : tmp_4_0.touched));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"value\", ctx_r0.TaskStatus.TODO);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0.TaskStatus.TODO);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"value\", ctx_r0.TaskStatus.IN_PROGRESS);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0.TaskStatus.IN_PROGRESS);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"value\", ctx_r0.TaskStatus.DONE);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0.TaskStatus.DONE);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ((tmp_11_0 = ctx_r0.taskForm.get(\"status\")) == null ? null : tmp_11_0.invalid) && ((tmp_11_0 = ctx_r0.taskForm.get(\"status\")) == null ? null : tmp_11_0.touched));\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.taskForm.invalid || ctx_r0.saving);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.saving);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.saving);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.saving ? \"Saving...\" : \"Save Changes\", \" \");\n  }\n}\nexport class TaskEditComponent {\n  constructor(fb, taskService, route, router) {\n    this.fb = fb;\n    this.taskService = taskService;\n    this.route = route;\n    this.router = router;\n    this.taskForm = null;\n    this.loading = false;\n    this.saving = false;\n    this.error = '';\n    this.TaskStatus = TaskStatus;\n  }\n  ngOnInit() {\n    this.loadTask();\n  }\n  loadTask() {\n    this.loading = true;\n    this.error = '';\n    const taskId = Number(this.route.snapshot.paramMap.get('id'));\n    this.taskService.getTaskById(taskId).subscribe({\n      next: task => {\n        this.initializeForm(task);\n        this.loading = false;\n      },\n      error: error => {\n        this.error = 'Failed to load task. Please try again.';\n        this.loading = false;\n        console.error('Error loading task:', error);\n      }\n    });\n  }\n  initializeForm(task) {\n    this.taskForm = this.fb.group({\n      title: [task.title, [Validators.required]],\n      description: [task.description || ''],\n      status: [task.status, [Validators.required]],\n      dueDate: [task.dueDate ? this.formatDateForInput(task.dueDate) : '']\n    });\n  }\n  formatDateForInput(date) {\n    const d = new Date(date);\n    const year = d.getFullYear();\n    const month = String(d.getMonth() + 1).padStart(2, '0');\n    const day = String(d.getDate()).padStart(2, '0');\n    const hours = String(d.getHours()).padStart(2, '0');\n    const minutes = String(d.getMinutes()).padStart(2, '0');\n    return `${year}-${month}-${day}T${hours}:${minutes}`;\n  }\n  onSubmit() {\n    if (this.taskForm && this.taskForm.valid) {\n      this.saving = true;\n      this.error = '';\n      const taskId = Number(this.route.snapshot.paramMap.get('id'));\n      const taskData = {\n        ...this.taskForm.value,\n        dueDate: this.taskForm.value.dueDate ? new Date(this.taskForm.value.dueDate) : undefined\n      };\n      this.taskService.updateTask(taskId, taskData).subscribe({\n        next: () => {\n          this.router.navigate(['/tasks', taskId]);\n        },\n        error: error => {\n          this.error = 'Failed to update task. Please try again.';\n          this.saving = false;\n          console.error('Error updating task:', error);\n        }\n      });\n    } else if (this.taskForm) {\n      this.markFormGroupTouched();\n    }\n  }\n  markFormGroupTouched() {\n    if (this.taskForm) {\n      Object.keys(this.taskForm.controls).forEach(key => {\n        const control = this.taskForm.get(key);\n        control?.markAsTouched();\n      });\n    }\n  }\n  static {\n    this.ɵfac = function TaskEditComponent_Factory(t) {\n      return new (t || TaskEditComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.TaskService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TaskEditComponent,\n      selectors: [[\"app-task-edit\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 13,\n      vars: 3,\n      consts: [[1, \"row\", \"justify-content-center\"], [1, \"col-md-8\", \"col-lg-6\"], [1, \"task-form\"], [1, \"d-flex\", \"justify-content-between\", \"align-items-center\", \"mb-4\"], [1, \"fas\", \"fa-edit\", \"me-2\"], [\"routerLink\", \"/tasks\", 1, \"btn\", \"btn-outline-secondary\"], [1, \"fas\", \"fa-arrow-left\", \"me-1\"], [\"class\", \"loading-spinner\", 4, \"ngIf\"], [\"class\", \"alert alert-danger\", \"role\", \"alert\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [1, \"loading-spinner\"], [\"role\", \"status\", 1, \"spinner-border\", \"text-primary\"], [1, \"visually-hidden\"], [\"role\", \"alert\", 1, \"alert\", \"alert-danger\"], [1, \"fas\", \"fa-exclamation-triangle\", \"me-2\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"mb-3\"], [\"for\", \"title\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"title\", \"formControlName\", \"title\", \"placeholder\", \"Enter task title\", 1, \"form-control\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"for\", \"description\", 1, \"form-label\"], [\"id\", \"description\", \"formControlName\", \"description\", \"rows\", \"4\", \"placeholder\", \"Enter task description (optional)\", 1, \"form-control\"], [\"for\", \"status\", 1, \"form-label\"], [\"id\", \"status\", \"formControlName\", \"status\", 1, \"form-select\"], [\"value\", \"\"], [3, \"value\"], [\"for\", \"dueDate\", 1, \"form-label\"], [\"type\", \"datetime-local\", \"id\", \"dueDate\", \"formControlName\", \"dueDate\", \"placeholder\", \"Select due date (optional)\", 1, \"form-control\"], [1, \"d-grid\", \"gap-2\", \"d-md-flex\", \"justify-content-md-end\"], [\"routerLink\", \"/tasks\", 1, \"btn\", \"btn-secondary\", \"me-md-2\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm me-2\", \"role\", \"status\", 4, \"ngIf\"], [\"class\", \"fas fa-save me-1\", 4, \"ngIf\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [\"role\", \"status\", 1, \"spinner-border\", \"spinner-border-sm\", \"me-2\"], [1, \"fas\", \"fa-save\", \"me-1\"]],\n      template: function TaskEditComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h2\");\n          i0.ɵɵelement(5, \"i\", 4);\n          i0.ɵɵtext(6, \"Edit Task\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"a\", 5);\n          i0.ɵɵelement(8, \"i\", 6);\n          i0.ɵɵtext(9, \"Back to Tasks \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(10, TaskEditComponent_div_10_Template, 4, 0, \"div\", 7)(11, TaskEditComponent_div_11_Template, 3, 1, \"div\", 8)(12, TaskEditComponent_form_12_Template, 34, 17, \"form\", 9);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(10);\n          i0.ɵɵproperty(\"ngIf\", ctx.loading);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.error);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.loading && ctx.taskForm);\n        }\n      },\n      dependencies: [CommonModule, i4.NgIf, ReactiveFormsModule, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, RouterLink],\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["CommonModule","Validators","ReactiveFormsModule","RouterLink","TaskStatus","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","error","ɵɵtemplate","TaskEditComponent_form_12_div_5_div_1_Template","ɵɵproperty","tmp_2_0","taskForm","get","errors","TaskEditComponent_form_12_div_22_div_1_Template","ɵɵlistener","TaskEditComponent_form_12_Template_form_ngSubmit_0_listener","ɵɵrestoreView","_r2","ɵɵnextContext","ɵɵresetView","onSubmit","TaskEditComponent_form_12_div_5_Template","TaskEditComponent_form_12_div_22_Template","TaskEditComponent_form_12_span_31_Template","TaskEditComponent_form_12_i_32_Template","ɵɵclassProp","invalid","touched","tmp_3_0","tmp_4_0","TODO","ɵɵtextInterpolate","IN_PROGRESS","DONE","tmp_11_0","saving","TaskEditComponent","constructor","fb","taskService","route","router","loading","ngOnInit","loadTask","taskId","Number","snapshot","paramMap","getTaskById","subscribe","next","task","initializeForm","console","group","title","required","description","status","dueDate","formatDateForInput","date","d","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","valid","taskData","value","undefined","updateTask","navigate","markFormGroupTouched","Object","keys","controls","forEach","key","control","markAsTouched","ɵɵdirectiveInject","i1","FormBuilder","i2","TaskService","i3","ActivatedRoute","Router","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","TaskEditComponent_Template","rf","ctx","TaskEditComponent_div_10_Template","TaskEditComponent_div_11_Template","TaskEditComponent_form_12_Template","i4","NgIf","ɵNgNoValidate","NgSelectOption","ɵNgSelectMultipleOption","DefaultValueAccessor","SelectControlValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","encapsulation"],"sources":["C:\\Users\\HP\\Desktop\\taskmanager\\frontend\\src\\app\\components\\task-edit\\task-edit.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\r\nimport { ActivatedRoute, Router, RouterLink } from '@angular/router';\r\nimport { TaskService } from '../../services/task.service';\r\nimport { Task, TaskStatus } from '../../models/task.model';\r\n\r\n@Component({\r\n  selector: 'app-task-edit',\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule, RouterLink],\r\n  template: `\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-md-8 col-lg-6\">\r\n        <div class=\"task-form\">\r\n          <div class=\"d-flex justify-content-between align-items-center mb-4\">\r\n            <h2><i class=\"fas fa-edit me-2\"></i>Edit Task</h2>\r\n            <a routerLink=\"/tasks\" class=\"btn btn-outline-secondary\">\r\n              <i class=\"fas fa-arrow-left me-1\"></i>Back to Tasks\r\n            </a>\r\n          </div>\r\n\r\n          <div *ngIf=\"loading\" class=\"loading-spinner\">\r\n            <div class=\"spinner-border text-primary\" role=\"status\">\r\n              <span class=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div *ngIf=\"error\" class=\"alert alert-danger\" role=\"alert\">\r\n            <i class=\"fas fa-exclamation-triangle me-2\"></i>\r\n            {{ error }}\r\n          </div>\r\n\r\n          <form *ngIf=\"!loading && taskForm\" [formGroup]=\"taskForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"mb-3\">\r\n              <label for=\"title\" class=\"form-label\">Title *</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"title\"\r\n                formControlName=\"title\"\r\n                [class.is-invalid]=\"taskForm.get('title')?.invalid && taskForm.get('title')?.touched\"\r\n                placeholder=\"Enter task title\"\r\n              >\r\n              <div *ngIf=\"taskForm.get('title')?.invalid && taskForm.get('title')?.touched\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"taskForm.get('title')?.errors?.['required']\">Title is required.</div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"mb-3\">\r\n              <label for=\"description\" class=\"form-label\">Description</label>\r\n              <textarea\r\n                class=\"form-control\"\r\n                id=\"description\"\r\n                formControlName=\"description\"\r\n                rows=\"4\"\r\n                placeholder=\"Enter task description (optional)\"\r\n              ></textarea>\r\n            </div>\r\n\r\n            <div class=\"mb-3\">\r\n              <label for=\"status\" class=\"form-label\">Status *</label>\r\n              <select\r\n                class=\"form-select\"\r\n                id=\"status\"\r\n                formControlName=\"status\"\r\n                [class.is-invalid]=\"taskForm.get('status')?.invalid && taskForm.get('status')?.touched\"\r\n              >\r\n                <option value=\"\">Select status</option>\r\n                <option [value]=\"TaskStatus.TODO\">{{ TaskStatus.TODO }}</option>\r\n                <option [value]=\"TaskStatus.IN_PROGRESS\">{{ TaskStatus.IN_PROGRESS }}</option>\r\n                <option [value]=\"TaskStatus.DONE\">{{ TaskStatus.DONE }}</option>\r\n              </select>\r\n              <div *ngIf=\"taskForm.get('status')?.invalid && taskForm.get('status')?.touched\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"taskForm.get('status')?.errors?.['required']\">Status is required.</div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"mb-3\">\r\n              <label for=\"dueDate\" class=\"form-label\">Due Date</label>\r\n              <input\r\n                type=\"datetime-local\"\r\n                class=\"form-control\"\r\n                id=\"dueDate\"\r\n                formControlName=\"dueDate\"\r\n                placeholder=\"Select due date (optional)\"\r\n              >\r\n            </div>\r\n\r\n            <div class=\"d-grid gap-2 d-md-flex justify-content-md-end\">\r\n              <a routerLink=\"/tasks\" class=\"btn btn-secondary me-md-2\">Cancel</a>\r\n              <button\r\n                type=\"submit\"\r\n                class=\"btn btn-primary\"\r\n                [disabled]=\"taskForm.invalid || saving\"\r\n              >\r\n                <span *ngIf=\"saving\" class=\"spinner-border spinner-border-sm me-2\" role=\"status\"></span>\r\n                <i *ngIf=\"!saving\" class=\"fas fa-save me-1\"></i>\r\n                {{ saving ? 'Saving...' : 'Save Changes' }}\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: []\r\n})\r\nexport class TaskEditComponent implements OnInit {\r\n  taskForm: FormGroup | null = null;\r\n  loading = false;\r\n  saving = false;\r\n  error = '';\r\n  TaskStatus = TaskStatus;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private taskService: TaskService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadTask();\r\n  }\r\n\r\n  loadTask(): void {\r\n    this.loading = true;\r\n    this.error = '';\r\n\r\n    const taskId = Number(this.route.snapshot.paramMap.get('id'));\r\n    \r\n    this.taskService.getTaskById(taskId).subscribe({\r\n      next: (task) => {\r\n        this.initializeForm(task);\r\n        this.loading = false;\r\n      },\r\n      error: (error) => {\r\n        this.error = 'Failed to load task. Please try again.';\r\n        this.loading = false;\r\n        console.error('Error loading task:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  private initializeForm(task: Task): void {\r\n    this.taskForm = this.fb.group({\r\n      title: [task.title, [Validators.required]],\r\n      description: [task.description || ''],\r\n      status: [task.status, [Validators.required]],\r\n      dueDate: [task.dueDate ? this.formatDateForInput(task.dueDate) : '']\r\n    });\r\n  }\r\n\r\n  private formatDateForInput(date: Date): string {\r\n    const d = new Date(date);\r\n    const year = d.getFullYear();\r\n    const month = String(d.getMonth() + 1).padStart(2, '0');\r\n    const day = String(d.getDate()).padStart(2, '0');\r\n    const hours = String(d.getHours()).padStart(2, '0');\r\n    const minutes = String(d.getMinutes()).padStart(2, '0');\r\n    return `${year}-${month}-${day}T${hours}:${minutes}`;\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.taskForm && this.taskForm.valid) {\r\n      this.saving = true;\r\n      this.error = '';\r\n\r\n      const taskId = Number(this.route.snapshot.paramMap.get('id'));\r\n      const taskData: Task = {\r\n        ...this.taskForm.value,\r\n        dueDate: this.taskForm.value.dueDate ? new Date(this.taskForm.value.dueDate) : undefined\r\n      };\r\n\r\n      this.taskService.updateTask(taskId, taskData).subscribe({\r\n        next: () => {\r\n          this.router.navigate(['/tasks', taskId]);\r\n        },\r\n        error: (error) => {\r\n          this.error = 'Failed to update task. Please try again.';\r\n          this.saving = false;\r\n          console.error('Error updating task:', error);\r\n        }\r\n      });\r\n    } else if (this.taskForm) {\r\n      this.markFormGroupTouched();\r\n    }\r\n  }\r\n\r\n  private markFormGroupTouched(): void {\r\n    if (this.taskForm) {\r\n      Object.keys(this.taskForm.controls).forEach(key => {\r\n        const control = this.taskForm!.get(key);\r\n        control?.markAsTouched();\r\n      });\r\n    }\r\n  }\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}